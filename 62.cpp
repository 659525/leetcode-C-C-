//62.不同路径
//关键词：类A*寻路算法，递归，排列组合原理
//author：659525

/*
一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。初始坐标为(1,1)
机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。
问总共有多少条不同的路径？

示例 2：
* 0 0
0 0 x


输入：m = 3, n = 2
输出：3
解释：
从左上角开始，总共有 3 条路径可以到达右下角。
1. 向右 -> 向右 -> 向下
2. 向右 -> 向下 -> 向右
3. 向下 -> 向右 -> 向右

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/unique-paths
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */

//只能向下或者向右移动，对于坐标(m,n),需要向右移动m-1次，向下移动n-1；即//求从总次数(m-1+n-1)中选择(m-1)次的排列组合：C(m-1)/((m-1)+(n-1))

int uniquePaths(int m, int n) {
	//求从总次数(m-1+n-1)中选择(m-1)次的排列组合：C(m-1)/((m-1)+(n-1)) 即 (m+n-2)!/(m-1)!*(n-1)! (m+n-2)* ...  (m)/(n-1)!
	long long ans = 1;//不用int是因为阶乘数据通常都很大
	//(m + n - 2)* ...  (m) / (n - 1)! //两边一共要加n-1次
	for (int x=m,y=1;y<n;x++,y++)
	{
		ans = ans * x / y;
	}
	return ans;

}
int main()
{
	int a=uniquePaths(3, 7);
	return 0;
}
